Nom : _xscan
Formule : 
LAMBDA(initial_value,input_array,calculation_lambda,LET(is_column, ROWS(input_array) > COLUMNS(input_array), array_size, MAX(ROWS(input_array), COLUMNS(input_array)), indices, SEQUENCE(array_size), scan_result, REDUCE(initial_value, indices, LAMBDA(accumulator_stack,current_index, LET(pos, LAMBDA(offset, LET(target_index, current_index + offset, IF(OR(target_index < 1, target_index > array_size), 0, IF(is_column, INDEX(input_array, target_index, 1), INDEX(input_array, 1, target_index))))), cumul, LAMBDA(offset, LET(target_index, current_index + offset + 1, IF(OR(target_index < 1, target_index > current_index), 0, IF(is_column, INDEX(accumulator_stack, target_index, 1), INDEX(accumulator_stack, 1, target_index))))), last_accumulator, IF(current_index = 1, initial_value, cumul(-1)), current_value, pos(0), new_value, IFERROR(calculation_lambda(last_accumulator, current_value, pos, cumul), IFERROR(calculation_lambda(last_accumulator, current_value, pos), calculation_lambda(last_accumulator, current_value))), IF(is_column, VSTACK(accumulator_stack, new_value), HSTACK(accumulator_stack, new_value))))), IF(is_column, DROP(scan_result, 1), DROP(scan_result, , 1))))
