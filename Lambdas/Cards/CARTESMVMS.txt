Nom : CARTESMVMS
Formule : 
LAMBDA(cartes,nombres, LET(    \\LambdaName, "CARTESMVMS",    _Suites, RIGHT(TOCOL(cartes)),    _Valeurs, LEFT(TOCOL(cartes)),    _UniqueValeurs, UNIQUE(_Valeurs),    _UniqueValeurs_2, "?",    _Step5, "?",    _Step6, "?",    _Step7, "?",    _Step8, IFERROR(       CARTESMVSD(          FILTER(             TOCOL(cartes),             ISNUMBER(XMATCH(_Valeurs, _UniqueValeurs)) * (_Suites = _UniqueValeurs_2),             "n/a"          ),          nombres       ),       "n/a"    ),    _Step9, IFERROR(       CARTESMVSD(          FILTER(             TOCOL(cartes),             ISNUMBER(XMATCH(_Valeurs, _UniqueValeurs)) * (_Suites = _Step5),             "n/a"          ),          nombres       ),       "n/a"    ),    _Step10, IFERROR(       CARTESMVSD(          FILTER(             TOCOL(cartes),             ISNUMBER(XMATCH(_Valeurs, _UniqueValeurs)) * (_Suites = _Step6),             "n/a"          ),          nombres       ),       "n/a"    ),    _Step11, IFERROR(       CARTESMVSD(          FILTER(             TOCOL(cartes),             ISNUMBER(XMATCH(_Valeurs, _UniqueValeurs)) * (_Suites = _Step7),             "n/a"          ),          nombres       ),       "n/a"    ),    _CombinaisonPossible, VSTACK(_Step8, _Step9, _Step10, _Step11),    _Result, FILTER(       _CombinaisonPossible,       _CombinaisonPossible <> "n/a",       "Pas de combinaison possible"    ),    _Result&"" ))
